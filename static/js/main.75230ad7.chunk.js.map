{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","Provider","value","toggleTheme","name","localStorage","setItem","about","role","description","social","linkedin","github","twitter","mastodon","projects","stack","appstore","sourceCode","youtube","skills","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","className","style","display","length","href","onClick","type","Header","About","resume","xmlns","fill","viewBox","width","height","d","ProjectContainer","project","map","item","uniqid","livePreview","Projects","id","Skills","skill","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","fontSize","Contact","Footer","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.75230ad7.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  // all the properties are optional - can be left empty or deleted\n  homepage: 'https://tcamin.github.io',\n  title: 'JS.',\n}\n\nconst about = {\n  // all the properties are optional - can be left empty or deleted\n  name: 'Tomas Camin',\n  role: 'mobile engineer working on iOS @Subito-it',\n  description:\n    'I\\'m part of a platform team where I get to work on improving mobile developer experience and productivity. I automate things and enjoy creating tools that allow to build and ship apps quicker and more efficiently. Back in the days I built an app to measure the tennis serve with the iPhone camera.',\n  social: {\n    linkedin: 'https://www.linkedin.com/in/tomas-camin-28859023/',\n    github: 'https://github.com/Subito-it',\n    twitter: 'https://twitter.com/tomascamin',\n    mastodon: 'https://mastodon.social/@tcamin',\n  },\n}\n\nconst projects = [\n  {\n    name: 'Subito',\n    description:\n      'The leading classified marketplace in Italy allowing millions of users to buy and sell second hand goods',\n    stack: ['Objective-C', 'Swift', 'UIKit'],\n    appstore: 'https://apps.apple.com/it/app/subito-it/id450775137',\n    sourceCode: 'https://github.com/Subito-it',\n  },\n  {\n    name: 'SBTUITestTunnel',\n    description:\n      'A library that extends the XCUITest framework allowing to dynamically mock network requests',\n    stack: ['UITests', 'Objective-C', 'Swift'],\n    sourceCode: 'https://github.com/Subito-it/SBTUITestTunnel',\n  },\n  {\n    name: 'PodBuilder',\n    description:\n      'A complementary tool to CocoaPods that speeds up compilation by prebuilding pods into frameworks',\n    stack: ['Ruby', 'CocoaPods'],\n    sourceCode: 'https://github.com/Subito-it/PodBuilder'\n  },\n  {\n    name: 'Mendoza',\n    description:\n      'Improve XCUITests execution speed by sharding over multiple physical machines',\n    stack: ['UITests', 'Swift'],\n    sourceCode: 'https://github.com/Subito-it/Mendoza',\n  },\n  {\n    name: 'Cachi',\n    description:\n      'Parse and visualize .xcresults on a web interface',\n    stack: ['UITests', 'Swift'],\n    sourceCode: 'https://github.com/Subito-it/Cachi',\n  },\n  {\n    name: 'Tennis Camera',\n    description:\n      'I once built this awesome app that used the iPhone camera to measure a tennis serve',\n    stack: ['Objective-C', 'Computer vision'],\n    youtube: 'https://www.youtube.com/watch?v=xxyR0lSPMrk',\n  },\n]\n\nconst skills = [\n\n]\n\nconst contact = {\n  // email is optional - if left empty Contact section won't show up\n  email: 't.camin@gmail.com',\n}\n\nexport { header, about, projects, skills, contact }\n","import { useContext, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport { projects, skills, contact } from '../../portfolio'\nimport './Navbar.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center nav'>\n      <ul\n        style={{ display: showNavList ? 'flex' : null }}\n        className='nav__list'\n      >\n        {projects.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#projects'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Projects\n            </a>\n          </li>\n        ) : null}\n\n        {skills.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#skills'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Skills\n            </a>\n          </li>\n        ) : null}\n\n        {contact.email ? (\n          <li className='nav__list-item'>\n            <a\n              href='#contact'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Contact\n            </a>\n          </li>\n        ) : null}\n      </ul>\n\n      <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { header } from '../../portfolio'\nimport Navbar from '../Navbar/Navbar'\nimport './Header.css'\n\nconst Header = () => {\n  const { homepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h3>\n        &nbsp;\n      </h3>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport TwitterIcon from '@material-ui/icons/Twitter'\nimport { about } from '../../portfolio'\nimport './About.css'\n\nconst About = () => {\n  const { name, role, description, resume, social } = about\n\n  return (\n    <div className='about center'>\n      {name && (\n        <h1>\n          Hi, I am <span className='about__name'>{name}.</span>\n        </h1>\n      )}\n\n      {role && <h2 className='about__role'>A {role}.</h2>}\n      <p className='about__desc'>{description && description}</p>\n\n      <div className='about__contact center'>\n        {resume && (\n          <a href={resume}>\n            <span type='button' className='btn btn--outline'>\n              Resume\n            </span>\n          </a>\n        )}\n\n        {social && (\n          <>\n            {social.twitter && (\n              <a\n                href={social.twitter}\n                aria-label='twitter'\n                className='link link--icon'\n              >\n                <TwitterIcon />\n              </a>\n            )}\n\n            {social.mastodon && (\n              <a\n                href={social.mastodon}\n                aria-label='mastodon'\n                className='link link--icon'\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#515151\" viewBox=\"4 0 24 30\" width=\"24px\" height=\"24px\"><path d=\"M 15.9375 4.03125 C 12.917 4.0435 9.9179219 4.4269844 8.3574219 5.1464844 C 8.3574219 5.1464844 5 6.6748594 5 11.880859 C 5 18.077859 4.9955 25.860234 10.5625 27.365234 C 12.6945 27.938234 14.527953 28.061562 16.001953 27.976562 C 18.676953 27.825562 20 27.005859 20 27.005859 L 19.910156 25.029297 C 19.910156 25.029297 18.176297 25.640313 16.029297 25.570312 C 13.902297 25.495313 11.6615 25.335688 11.3125 22.679688 C 11.2805 22.432688 11.264625 22.182594 11.265625 21.933594 C 15.772625 23.052594 19.615828 22.420969 20.673828 22.292969 C 23.627828 21.933969 26.199344 20.081672 26.527344 18.388672 C 27.041344 15.720672 26.998047 11.880859 26.998047 11.880859 C 26.998047 6.6748594 23.646484 5.1464844 23.646484 5.1464844 C 22.000984 4.3779844 18.958 4.019 15.9375 4.03125 z M 12.705078 8.0019531 C 13.739953 8.0297031 14.762578 8.4927031 15.392578 9.4707031 L 16.001953 10.505859 L 16.609375 9.4707031 C 17.874375 7.5037031 20.709594 7.6264375 22.058594 9.1484375 C 23.302594 10.596438 23.025391 11.531 23.025391 18 L 23.025391 18.001953 L 20.578125 18.001953 L 20.578125 12.373047 C 20.578125 9.7380469 17.21875 9.6362812 17.21875 12.738281 L 17.21875 16 L 14.787109 16 L 14.787109 12.738281 C 14.787109 9.6362812 11.429688 9.7360938 11.429688 12.371094 L 11.429688 18 L 8.9765625 18 C 8.9765625 11.526 8.7043594 10.585438 9.9433594 9.1484375 C 10.622859 8.3824375 11.670203 7.9742031 12.705078 8.0019531 z\"/></svg>\n              </a>\n            )}            \n\n            {social.github && (\n              <a\n                href={social.github}\n                aria-label='github'\n                className='link link--icon'\n              >\n                <GitHubIcon />\n              </a>\n            )}\n\n            {social.linkedin && (\n              <a\n                href={social.linkedin}\n                aria-label='linkedin'\n                className='link link--icon'\n              >\n                <LinkedInIcon />\n              </a>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport YouTubeIcon from '@material-ui/icons/YouTube'\nimport AppStoreIcon from '@material-ui/icons/Apple'\nimport './ProjectContainer.css'\n\nconst ProjectContainer = ({ project }) => (\n  <div className='project'>\n    <h3>{project.name}</h3>\n\n    <p className='project__description'>{project.description}</p>\n    {project.stack && (\n      <ul className='project__stack'>\n        {project.stack.map((item) => (\n          <li key={uniqid()} className='project__stack-item'>\n            {item}\n          </li>\n        ))}\n      </ul>\n    )}\n\n    {project.sourceCode && (\n      <a\n        href={project.sourceCode}\n        aria-label='source code'\n        className='link link--icon'\n      >\n        <GitHubIcon />\n      </a>\n    )}\n\n    {project.livePreview && (\n      <a\n        href={project.livePreview}\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <LaunchIcon />\n      </a>\n    )}\n\n    {project.youtube && (\n      <a\n        href={project.youtube}\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <YouTubeIcon />\n      </a>\n    )}\n\n    {project.appstore && (\n      <a\n        href={project.appstore}\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <AppStoreIcon />\n      </a>\n    )}\n  </div>\n)\n\nexport default ProjectContainer\n","import uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <section id='projects' className='section projects'>\n      <h2 className='section__title'>Projects</h2>\n\n      <div className='projects__grid'>\n        {projects.map((project) => (\n          <ProjectContainer key={uniqid()} project={project} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Projects\n","import uniqid from 'uniqid'\nimport { skills } from '../../portfolio'\nimport './Skills.css'\n\nconst Skills = () => {\n  if (!skills.length) return null\n\n  return (\n    <section className='section skills' id='skills'>\n      <h2 className='section__title'>Skills</h2>\n      <ul className='skills__list'>\n        {skills.map((skill) => (\n          <li key={uniqid()} className='skills__list-item btn btn--plain'>\n            {skill}\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Skills\n","import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './ScrollToTop.css'\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n","import { contact } from '../../portfolio'\nimport './Contact.css'\n\nconst Contact = () => {\n  if (!contact.email) return null\n\n  return (\n    <section className='section contact center' id='contact'>\n      <h2 className='section__title'>Contact</h2>\n      <a href={`mailto:${contact.email}`}>\n        <span type='button' className='btn btn--outline'>\n          Email me\n        </span>\n      </a>\n    </section>\n  )\n}\n\nexport default Contact\n","import './Footer.css'\n\nconst Footer = () => (\n  <footer className='footer' />\n)\n\nexport default Footer\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport About from './components/About/About'\nimport Projects from './components/Projects/Projects'\nimport Skills from './components/Skills/Skills'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Contact from './components/Contact/Contact'\nimport Footer from './components/Footer/Footer'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n\n      <main>\n        <About />\n        <Projects />\n        <Skills />\n        <Contact />\n      </main>\n\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}